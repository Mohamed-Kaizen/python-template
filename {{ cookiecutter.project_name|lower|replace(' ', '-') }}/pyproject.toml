[tool.poetry]
name = "{{ cookiecutter.project_name|lower|replace(' ', '-') }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.license }}"
readme = "README.md"
homepage = "{{ cookiecutter.domain_name }}"
documentation = ""
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_name|lower|replace(' ', '-')|replace('_', '-') }}/"
keywords = ["{{ cookiecutter.project_slug }}"]
include = [
    "README.md",
    "pyproject.toml"
]

[tool.poetry.dependencies]
python = "^3.8"
pydantic = "^1.8"
{% if cookiecutter.use_typer_for_CLI == 'yes' -%}typer = {extras = ["all"], version = "^0.3.2"}{%- endif %}
{% if cookiecutter.use_typer_for_CLI == 'yes' -%}rich = "^9.13"{%- endif %}

[tool.poetry.dev-dependencies]
black = "^20.8b1"
codecov = "^2.1"
coverage = {extras = ["toml"], version = "^5.5"}
darglint = "^1.7"
flake8 = "^3.8"
flake8-annotations = "^2.6"
flake8-bandit = "^2.1"
flake8-black = "^0.2"
flake8-bugbear = "^21.3"
flake8-docstrings = "^1.6"
flake8-import-order = "^0.18"
hypothesis = "^6.8.1"
isort = "^5.8"
mypy = "^0.812"
pytest = "^6.2"
pytest-cov = "^2.11"
safety = "^1.10"
typeguard = "^2.11"
xdoctest = "^0.15"
radon = "^4.5"
{% if cookiecutter.docs_tool == 'mkdocs' -%}mkdocs-material = "^7.0"{%- endif %}
{% if cookiecutter.docs_tool == 'mkdocs' -%}mkdocstrings = "^0.15"{%- endif %}
{% if cookiecutter.docs_tool == 'mkdocs' -%}mkdocs-minify-plugin = "^0.4"{%- endif %}
{% if cookiecutter.docs_tool == 'mkdocs' -%}mkdocs-git-revision-date-localized-plugin = "^0.8"{%- endif %}
{% if cookiecutter.docs_tool == 'mkdocs' -%}mkdocs-git-authors-plugin = "^0.3"{%- endif %}

{% if cookiecutter.use_typer_for_CLI == 'yes' -%}
[tool.poetry.scripts]
{{ cookiecutter.project_name|lower|replace(' ', '-')|replace('_', '-') }} = "{{ cookiecutter.project_slug }}.manage:app"
{%- endif %}

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["{{ cookiecutter.project_slug }}"]

[tool.coverage.report]
show_missing = true
fail_under = 90

[tool.isort]
profile="black"

[tool.pytest.ini_options]
minversion = "6.0"
python_files = "tests.py test_*.py *_tests.py"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
